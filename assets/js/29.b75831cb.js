(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{428:function(t,s,a){"use strict";a.r(s);var e=a(2),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"模块化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[t._v("#")]),t._v(" 模块化")]),t._v(" "),s("p",[t._v("更高效地管理和维护项目中的每一个资源")]),t._v(" "),s("p",[t._v("最早，将每个功能及其相关状态数据各自单独放到不同的"),s("code",[t._v("JS")]),t._v(" 文件中")]),t._v(" "),s("p",[t._v("弊端：模块全局工作，模块之间没有依赖关系，维护困难，没有私有空间")]),t._v(" "),s("p",[t._v("理想的解决方式是，在页面中引入一个"),s("code",[t._v("JS")]),t._v("入口文件，其余用到的模块可以通过代码控制，按需加载进来")]),t._v(" "),s("p",[t._v("除了模块加载的问题以外，还需要规定模块化的规范，如今流行的则是"),s("code",[t._v("CommonJS")]),t._v("、"),s("code",[t._v("ES Modules")])]),t._v(" "),s("h2",{attrs:{id:"webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" Webpack")]),t._v(" "),s("p",[t._v("webpack是一个用于现代"),s("code",[t._v("JavaScript")]),t._v("应用程序的静态模块打包工具")]),t._v(" "),s("p",[t._v("分析模块的依赖进行编译后打包成静态资源(js css jpg等图片)")]),t._v(" "),s("p",[t._v("从入口文件出发，通过递归调用loader，从一个module编译到其依赖的下一个module，最后组合成chunk.js文件输出")]),t._v(" "),s("p",[t._v("（按需加载 代码分割 异步加载）")]),t._v(" "),s("h4",{attrs:{id:"webpack的能力-编译-打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack的能力-编译-打包"}},[t._v("#")]),t._v(" "),s("code",[t._v("webpack")]),t._v("的能力：编译+打包")]),t._v(" "),s("p",[s("strong",[t._v("一切皆模块")]),t._v("：\n正如js文件可以是一个“模块（module）”一样，其他的（如css、image或html）文件也可视作模块。因此，你可以require(‘myJSfile.js’)亦可以require(‘myCSSfile.css’)。这意味着我们可以将事物（业务）分割成更小的易于管理的片段，从而达到重复利用等的目的。\n"),s("strong",[t._v("按需加载：")]),t._v("\n传统的模块打包工具（module bundlers）最终将所有的模块编译生成一个庞大的"),s("strong",[t._v("bundle.js")]),t._v("文件。但是在真实的app里边，"),s("code",[t._v("bundle.js")]),t._v("文件可能有10M到15M之大可能会导致应用一直处于加载中状态。因此Webpack使用许多特性来分割代码然后生成多个"),s("code",[t._v("bundle")]),t._v("文件，而且异步加载部分代码以实现按需加载。\n"),s("strong",[t._v("文件管理")]),t._v("\n每个文件都是一个资源，可以用require/import导入js\n每个入口文件会把自己所依赖(即require)的资源全部打包在一起，一个资源多次引用的话，只会打包一份\n对于多个入口的情况，其实就是分别独立的执行单个入口情况，每个入口文件不相干(可用CommonsChunkPlugin优化)\n"),s("strong",[t._v("打包原理")]),t._v(" "),s("strong",[t._v("把所有依赖打包成一个"),s("code",[t._v("bundle.js")]),t._v("文件，通过代码分割成单元片段并按需加载（异步加载）")])]),t._v(" "),s("h3",{attrs:{id:"webpack打包-构建-流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack打包-构建-流程"}},[t._v("#")]),t._v(" webpack打包(构建)流程")]),t._v(" "),s("p",[s("code",[t._v("webpack")]),t._v(" 的运行流程是一个串行的过程，它的工作流程就是将各个插件串联起来")]),t._v(" "),s("p",[t._v("从启动到结束会依次执行以下三大步骤：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("1. 初始化流程")]),t._v("：从配置文件"),s("code",[t._v("webpack.config.js")]),t._v("和 "),s("code",[t._v("Shell")]),t._v(" 语句中读取与合并参数，并初始化需要使用的插件和配置插件"),s("code",[t._v("plugins")]),t._v("等执行环境所需要的参数")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("2. 编译构建流程")]),t._v("：从 Entry 发出，针对每个 Module 串行调用对应的 Loader 去翻译文件内容，再找到该 Module 依赖的 Module，递归地进行编译处理")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("3. 输出流程")]),t._v("：对编译后的 Module 组合成 Chunk，把 Chunk 转换成文件，输出到文件系统")]),t._v(" "),s("p",[t._v("在以上过程中，"),s("code",[t._v("Webpack")]),t._v("会在特定时间点广播出特定的事件，插件(plugin)在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用"),s("code",[t._v("Webpack")]),t._v("提供的"),s("code",[t._v("API")]),t._v(",改变"),s("code",[t._v("Webpack")]),t._v("的运行结果")])])]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("strong",[t._v("Complier")]),t._v(" "),s("code",[t._v("Compiler")]),t._v("对象就是"),s("code",[t._v("webpack")]),t._v("的实体（是"),s("code",[t._v("Tapable")]),t._v("的实例，掌控着整个"),s("code",[t._v("webpack")]),t._v("的生命周期），他不执行具体的任务，只是进行一些调度工作。"),s("code",[t._v("Compiler")]),t._v("创建了"),s("code",[t._v("Compilation")]),t._v("对象，这个对象任务执行完毕后会将最终处理结果返回给"),s("code",[t._v("Compiler")]),t._v("。")])]),t._v(" "),s("p",[s("strong",[t._v("Compilation")]),t._v(" "),s("code",[t._v("Compilation")]),t._v("是编译阶段的主要执行者（是"),s("code",[t._v("Tapable")]),t._v("的实例），执行模块创建、依赖收集、分块、打包等主要任务的对象。")])]),t._v(" "),s("h3",{attrs:{id:"loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#loader"}},[t._v("#")]),t._v(" loader")]),t._v(" "),s("p",[t._v("默认情况下，在遇到"),s("code",[t._v("import")]),t._v("或者"),s("code",[t._v("require")]),t._v("加载模块的时候，"),s("code",[t._v("webpack")]),t._v("只支持对"),s("code",[t._v("js")]),t._v(" 和 "),s("code",[t._v("json")]),t._v(" 文件打包")]),t._v(" "),s("p",[t._v("像"),s("code",[t._v("css")]),t._v("、"),s("code",[t._v("sass")]),t._v("、"),s("code",[t._v("png")]),t._v("等这些类型的文件的时候，"),s("code",[t._v("webpack")]),t._v("则无能为力，这时候就需要配置对应的"),s("code",[t._v("loader")]),t._v("进行文件内容的解析")]),t._v(" "),s("p",[t._v("**配置：**在 webpack.config.js文件中指定 loader")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("module")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.css$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("use")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style-loader'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'css-loader'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用/禁用 url() 处理")]),t._v("\n    \t\t  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     \t\t  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用/禁用 @import 处理")]),t._v("\n     \t\t  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       \t\t  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启用/禁用 Sourcemap")]),t._v("\n        \t  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("sourceMap")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("modules")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sass-loader'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("对象属性"),s("code",[t._v("test")]),t._v(" 为匹配的文件后缀，属性"),s("code",[t._v("use")]),t._v("针对匹配到文件类型，调用对应的 "),s("code",[t._v("loader")]),t._v(" 进行处理，"),s("code",[t._v("loader")]),t._v("支持链式调用，链中的每个"),s("code",[t._v("loader")]),t._v("会处理之前已处理过的资源，最终变为"),s("code",[t._v("js")]),t._v("代码。顺序为相反的顺序【从下到上，从右到左】执行，即上述执行方式为"),s("code",[t._v("sass-loader")]),t._v("、"),s("code",[t._v("css-loader")]),t._v("、"),s("code",[t._v("style-loader")])]),t._v(" "),s("h3",{attrs:{id:"plugin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#plugin"}},[t._v("#")]),t._v(" plugin")]),t._v(" "),s("p",[s("code",[t._v("plugin")]),t._v("赋予其各种灵活的功能，例如打包优化、资源管理、环境变量注入等，它们会运行在 "),s("code",[t._v("webpack")]),t._v(" 的不同阶段（钩子 / 生命周期），贯穿了"),s("code",[t._v("webpack")]),t._v("整个编译周期，"),s("strong",[t._v("目的在于解决"),s("code",[t._v("loader")]),t._v(" 无法实现的其他事")])]),t._v(" "),s("p",[s("strong",[t._v("配置")]),t._v("--webpack.config.js文件")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" HtmlWebpackPlugin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'html-webpack-plugin'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过 npm 安装")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" webpack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问内置的插件")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("webpack"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ProgressPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HtmlWebpackPlugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/index.html'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("其本质是一个具有"),s("code",[t._v("apply")]),t._v("方法"),s("code",[t._v("javascript")]),t._v("对象")]),t._v(" "),s("p",[s("code",[t._v("apply")]),t._v(" 方法会被 "),s("code",[t._v("webpack compiler")]),t._v("调用，并且在整个编译生命周期都可以访问 "),s("code",[t._v("compiler")]),t._v("对象")]),t._v(" "),s("p",[t._v("整个编译"),s("strong",[t._v("生命周期钩子")])]),t._v(" "),s("ul",[s("li",[t._v("entry-option ：初始化 option")]),t._v(" "),s("li",[t._v("run")]),t._v(" "),s("li",[t._v("compile： 真正开始的编译，在创建 compilation 对象之前")]),t._v(" "),s("li",[t._v("compilation ：生成好了 compilation 对象")]),t._v(" "),s("li",[t._v("make 从 entry 开始递归分析依赖，准备对每个模块进行 build")]),t._v(" "),s("li",[t._v("after-compile： 编译 build 过程结束")]),t._v(" "),s("li",[t._v("emit ：在将内存中 assets 内容写到磁盘文件夹之前")]),t._v(" "),s("li",[t._v("after-emit ：在将内存中 assets 内容写到磁盘文件夹之后")]),t._v(" "),s("li",[t._v("done： 完成所有的编译过程")]),t._v(" "),s("li",[t._v("failed： 编译失败的时候")])]),t._v(" "),s("p",[s("strong",[t._v("常用插件")])]),t._v(" "),s("p",[s("code",[t._v("HtmlWebpackPlugin")])]),t._v(" "),s("p",[t._v("在打包结束后，⾃动生成⼀个 "),s("code",[t._v("html")]),t._v(" ⽂文件，并把打包生成的"),s("code",[t._v("js")]),t._v(" 模块引⼊到该 "),s("code",[t._v("html")]),t._v(" 中")]),t._v(" "),s("p",[s("code",[t._v("mini-css-extract-plugin")])]),t._v(" "),s("p",[t._v("提取 "),s("code",[t._v("CSS")]),t._v(" 到一个单独的文件中")]),t._v(" "),s("p",[s("code",[t._v("clean-webpack-plugin")])]),t._v(" "),s("p",[t._v("删除（清理）构建目录")]),t._v(" "),s("h3",{attrs:{id:"plugin和loader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#plugin和loader"}},[t._v("#")]),t._v(" plugin和loader")]),t._v(" "),s("p",[s("strong",[t._v("loader")]),t._v("：文件加载器，预处理文件---本质就是一个函数，在该函数中对接收到的内容进行转换，返回转换后的结果。 因为 Webpack 只认识 JavaScript，所以 Loader 就成了翻译官，对其他类型的资源进行转译的预处理工作")]),t._v(" "),s("p",[s("strong",[t._v("plugin")]),t._v("：插件，扩展功能---在 Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。")]),t._v(" "),s("p",[t._v("运行时机上的区别：")]),t._v(" "),s("ul",[s("li",[t._v("loader 运行在打包文件之前")]),t._v(" "),s("li",[t._v("plugins 在整个编译周期都起作用")])]),t._v(" "),s("h3",{attrs:{id:"跨域-webpack-proxy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域-webpack-proxy"}},[t._v("#")]),t._v(" 跨域--webpack proxy")]),t._v(" "),s("p",[s("code",[t._v("webpack proxy")]),t._v("，即"),s("code",[t._v("webpack")]),t._v("提供的代理服务")]),t._v(" "),s("p",[t._v("基本行为就是接收客户端发送的请求后转发给其他服务器")]),t._v(" "),s("p",[t._v("其目的是为了便于开发者在开发模式下解决跨域问题（浏览器安全策略限制）")]),t._v(" "),s("p",[t._v("想要实现代理首先需要一个中间服务器，"),s("code",[t._v("webpack")]),t._v("中提供服务器的工具为"),s("code",[t._v("webpack-dev-server")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ./webpack.config.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" path "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("devServer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("contentBase")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("compress")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("proxy")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'/api'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("target")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://api.github.com'")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("proxy")]),t._v("工作原理实质上是利用"),s("code",[t._v("http-proxy-middleware")]),t._v(" 这个"),s("code",[t._v("http")]),t._v("代理中间件，实现请求转发给其他服务器")]),t._v(" "),s("p",[s("strong",[t._v("服务器与服务器之间请求数据并不会存在跨域行为，跨域行为是浏览器安全策略限制")])]),t._v(" "),s("h3",{attrs:{id:"优化前端性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优化前端性能"}},[t._v("#")]),t._v(" 优化前端性能")]),t._v(" "),s("p",[t._v("可以通过文件体积大小入手，其次还可通过分包的形式、减少http请求次数等方式")]),t._v(" "),s("p",[t._v("通过"),s("code",[t._v("webpack")]),t._v("优化前端的手段有：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("JS代码压缩")]),t._v("---terser")]),t._v(" "),s("li",[s("strong",[t._v("CSS代码压缩")]),t._v("--插件"),s("code",[t._v("css-minimizer-webpack-plugin")]),t._v("【一般是去除无用空格】")]),t._v(" "),s("li",[s("strong",[t._v("Html文件代码压缩")]),t._v("---使用"),s("code",[t._v("HtmlWebpackPlugin")]),t._v("插件来生成"),s("code",[t._v("HTML")]),t._v("的模板时候，通过配置属性"),s("code",[t._v("minify")]),t._v("进行"),s("code",[t._v("html")]),t._v("优化")]),t._v(" "),s("li",[t._v("文件大小压缩")]),t._v(" "),s("li",[t._v("图片压缩")]),t._v(" "),s("li",[t._v("Tree Shaking（消除死代码）")]),t._v(" "),s("li",[s("strong",[t._v("代码分离")]),t._v("---将代码分离到不同的"),s("code",[t._v("bundle")]),t._v("中，之后我们可以按需加载，或者并行加载这些文件")]),t._v(" "),s("li",[t._v("内联 chunk")])]),t._v(" "),s("h4",{attrs:{id:"提高构建速度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#提高构建速度"}},[t._v("#")]),t._v(" 提高构建速度")]),t._v(" "),s("p",[t._v("主要可以从优化搜索时间、缩小文件搜索范围、减少不必要的编译等方面入手")]),t._v(" "),s("ul",[s("li",[t._v("优化 loader 配置")]),t._v(" "),s("li",[t._v("合理使用 resolve.extensions")]),t._v(" "),s("li",[t._v("优化 resolve.modules")]),t._v(" "),s("li",[t._v("优化 resolve.alias")]),t._v(" "),s("li",[t._v("使用 DLLPlugin 插件")]),t._v(" "),s("li",[t._v("使用 cache-loader")]),t._v(" "),s("li",[t._v("terser 启动多线程")]),t._v(" "),s("li",[t._v("合理使用 sourceMap")])]),t._v(" "),s("h3",{attrs:{id:"webpack热更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack热更新"}},[t._v("#")]),t._v(" webpack热更新")]),t._v(" "),s("p",[s("code",[t._v("HMR")]),t._v("全称 "),s("code",[t._v("Hot Module Replacement")]),t._v("，可以理解为模块热替换，指在应用程序运行过程中，替换、添加、删除模块，而无需重新刷新整个应用")]),t._v(" "),s("p",[t._v("例如，我们在应用运行过程中修改了某个模块，通过自动刷新会导致整个应用的整体刷新，那页面中的状态信息都会丢失")]),t._v(" "),s("p",[t._v("如果使用的是 "),s("code",[t._v("HMR")]),t._v("，就可以实现只将修改的模块实时替换至应用中，不必完全刷新整个应用")]),t._v(" "),s("p",[t._v("配置热模块开启：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" webpack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("devServer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开启 HMR 特性")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hot")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hotOnly: true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("通过上述这种配置，如果我们修改并保存"),s("code",[t._v("css")]),t._v("文件，确实能够以不刷新的形式更新到页面中")]),t._v(" "),s("ul",[s("li",[t._v("通过"),s("code",[t._v("webpack-dev-server")]),t._v("创建两个服务器：提供静态资源的服务（express）和Socket服务")]),t._v(" "),s("li",[t._v("express server 负责直接提供静态资源的服务（打包后的资源直接被浏览器请求和解析）")]),t._v(" "),s("li",[t._v("socket server 是一个 websocket 的长连接，双方可以通信")]),t._v(" "),s("li",[t._v("当 socket server 监听到对应的模块发生变化时，会生成两个文件.json（manifest文件）和.js文件（update chunk）")]),t._v(" "),s("li",[t._v("通过长连接，socket server 可以直接将这两个文件主动发送给客户端（浏览器）")]),t._v(" "),s("li",[t._v("浏览器拿到两个新的文件后，通过HMR runtime机制，加载这两个文件，并且针对修改的模块进行更新")])]),t._v(" "),s("h3",{attrs:{id:"vite和webpack区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vite和webpack区别"}},[t._v("#")]),t._v(" vite和webpack区别")]),t._v(" "),s("p",[t._v("webpack会"),s("strong",[t._v("先打包")]),t._v("，然后启动开发服务器，"),s("strong",[t._v("请求服务器时直接给予")]),t._v("打包结果。")]),t._v(" "),s("p",[t._v("vite是直接启动开发服务器，"),s("strong",[t._v("请求哪个模块再对该模块进行实时编译")]),t._v("。")]),t._v(" "),s("p",[t._v("由于现代浏览器本身就支持ES Module，会自动向依赖的Module发出请求。vite充分利用这一点，将开发环境下的模块文件，就作为浏览器要执行的文件，而不是像webpack那样进行打包合并。")]),t._v(" "),s("p",[s("code",[t._v("webpack")]),t._v("大而全，很多常用的功能做到开箱即用。有两大最核心的特点："),s("strong",[t._v("一切皆模块")]),t._v("和"),s("strong",[t._v("按需加载")]),t._v("【可以将代码切割成不同的 chunk】")]),t._v(" "),s("h3",{attrs:{id:"vite启动速度快"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vite启动速度快"}},[t._v("#")]),t._v(" Vite启动速度快")]),t._v(" "),s("p",[t._v("由于vite在启动的时候不需要打包，也就意味着不需要分析模块的依赖、不需要编译，因此启动速度非常快。当浏览器请求某个模块时，再根据需要对模块内容进行编译。这种按需"),s("strong",[t._v("动态编译")]),t._v("的方式，极大的缩减了编译时间，项目越复杂、模块越多，vite的优势越明显。")]),t._v(" "),s("p",[t._v("在HMR方面，当改动了一个模块后，仅需让浏览器重新请求该模块即可，不像webpack那样需要把该模块的相关依赖模块全部编译一次，效率更高。 当需要打包到生产环境时，vite使用传统的rollup进行打包，因此，vite的主要优势在开发阶段。另外，由于vite利用的是ES Module，因此在代码中不可以使用CommonJS")])])}),[],!1,null,null,null);s.default=r.exports}}]);