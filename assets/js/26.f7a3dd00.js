(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{425:function(v,_,t){"use strict";t.r(_);var r=t(2),o=Object(r.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"typescript"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[v._v("#")]),v._v(" TypeScript")]),v._v(" "),_("p",[_("code",[v._v("TypeScript")]),v._v(" 是 "),_("code",[v._v("JavaScript")]),v._v(" 的类型的"),_("strong",[v._v("超集")]),v._v("，"),_("strong",[v._v("扩展")]),v._v("了"),_("code",[v._v("JavaScript")]),v._v(" 的语法，支持ES6语法，是一门"),_("strong",[v._v("面向对象编程")]),v._v("语言")]),v._v(" "),_("p",[_("strong",[v._v("强类型")]),v._v("（不会处理与类型定义明显矛盾的"),_("strong",[v._v("运算")]),v._v("，而弱类型会临时转换值的类型，如字符串＋数字）、"),_("strong",[v._v("静态类型")]),v._v("（创建一份数据（变量、参数、返回值等）时需要显式指明该数据的类型）")]),v._v(" "),_("p",[v._v("在"),_("strong",[v._v("代码编译阶段就可以检查出数据类型的错误")]),v._v("，静态类型更有利于构建大型应用（静态和动态类型是针对类型检查的时机来区分）")]),v._v(" "),_("p",[v._v("类型强弱是针对类型转换是否显示来区分")]),v._v(" "),_("p",[v._v("保证兼容性，"),_("code",[v._v("TypeScript")]),v._v(" 在编译阶段需要编译器编译成纯 "),_("code",[v._v("JavaScript")]),v._v(" 来运行，是为"),_("strong",[v._v("大型应用之开发而设计")]),v._v("的语言")]),v._v(" "),_("p",[v._v("TypeScript使代码更易于阅读和理解")]),v._v(" "),_("p",[_("code",[v._v("TypeScript")]),v._v(" 的特性主要有如下：")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("类型批注和编译时类型检查")]),v._v(" ：在编译时批注变量类型")]),v._v(" "),_("li",[_("strong",[v._v("类型推断")]),v._v("：ts 中没有批注变量类型会自动推断变量的类型")]),v._v(" "),_("li",[_("strong",[v._v("类型擦除")]),v._v("：在编译过程中批注的内容和接口会在运行时利用工具擦除")]),v._v(" "),_("li",[_("strong",[v._v("接口")]),v._v("：ts 中用接口来"),_("strong",[v._v("定义对象类型")])]),v._v(" "),_("li",[_("strong",[v._v("Mixin")]),v._v("：可以接受任意类型的值")]),v._v(" "),_("li",[_("strong",[v._v("泛型编程")]),v._v("：写代码时使用一些以后才指定的类型")]),v._v(" "),_("li",[_("strong",[v._v("名字空间")]),v._v("：名字只在该区域内有效，其他区域"),_("strong",[v._v("可重复使用")]),v._v("该名字而不冲突")]),v._v(" "),_("li",[_("strong",[v._v("元组tuple")]),v._v(" ：TS数据类型，元组合并了不同类型的对象，相当于一个可以装不同类型数据的数组")]),v._v(" "),_("li",[_("strong",[v._v("枚举enum")]),v._v("：TS数据类型，允许定义一组命名常量，为相关值的集合（数字或字符串值）")]),v._v(" "),_("li",[_("strong",[v._v("any")]),v._v("：TS数据类型，代表任意类型，在编程阶段还不清楚类型的变量指定一个类型，不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查")]),v._v(" "),_("li",[_("strong",[v._v("void")]),v._v("：TS数据类型，表示没有任何类型（可以赋值为null和undefined）")]),v._v(" "),_("li",[_("strong",[v._v("never")]),v._v("：TS数据类型，一个不包含任何值的类型，永远不存在的值。拥有 void 返回值类型的函数能正常运行。拥有 never 返回值类型的函数无法正常返回，无法终止，或会抛出异常")])]),v._v(" "),_("p",[v._v("推荐使用TypeScript的原因")]),v._v(" "),_("p",[v._v("优点：面向对象编程---更易于阅读和理解，JS超集，强类型（类型转换显示），静态类型（类型检查时机）---"),_("strong",[v._v("在代码编译阶段就可以检查出数据类型的错误---对于大型应用降低修复成本")])]),v._v(" "),_("p",[v._v("缺点：需要脚本编程经验，需要编译成js语言来运行（耗时）")]),v._v(" "),_("p",[v._v("应用场景：大型应用开发设计的语言")]),v._v(" "),_("h2",{attrs:{id:"模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[v._v("#")]),v._v(" 模块")]),v._v(" "),_("p",[_("strong",[v._v("模块")]),v._v("："),_("code",[v._v("TypeScript")]),v._v(" 与"),_("code",[v._v("ECMAScript")]),v._v(" 2015 一样，任何包含顶级 "),_("code",[v._v("import")]),v._v(" 或者 "),_("code",[v._v("export")]),v._v(" 的文件都被当成一个模块")]),v._v(" "),_("p",[v._v("相反地，如果一个文件不带有顶级的"),_("code",[v._v("import")]),v._v("或者"),_("code",[v._v("export")]),v._v("声明，那么它的内容被视为全局可见的")])])}),[],!1,null,null,null);_.default=o.exports}}]);