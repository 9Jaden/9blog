(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{405:function(t,s,a){t.exports=a.p+"assets/img/mine.7ebe3e57.png"},434:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"扫雷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#扫雷"}},[t._v("#")]),t._v(" 扫雷")]),t._v(" "),s("h3",{attrs:{id:"游戏展示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#游戏展示"}},[t._v("#")]),t._v(" 游戏展示：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(405),alt:"An image"}})]),t._v(" "),s("h3",{attrs:{id:"页面结构绘制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#页面结构绘制"}},[t._v("#")]),t._v(" 页面结构绘制：")]),t._v(" "),s("p",[s("strong",[t._v("渲染地雷盘")]),t._v('：用16*16二维数组buttonArr表示扫雷主体，而为了在页面中渲染，双层遍历buttonArr，第一层创建ul标签【document.createElement("ul")】，第二层创建button标签代表地雷中每一个格子，并且用button.dataset给每一个button添加自定义属性【坐标xy、周围炸弹数量bombNum、是否为地雷or是否为被标记的格子z】')]),t._v(" "),s("p",[s("strong",[t._v("渲染地雷")]),t._v("【buttonArr重要属性bombNum---表示该格子周围炸弹数，地雷为9】：随机生成存储地雷坐标的数组【共40个】，后遍历按钮数组buttonArr在对应坐标位置赋予表示其为地雷的属性【bombNum为9】")]),t._v(" "),s("p",[t._v("而对于非地雷格子"),s("strong",[t._v("添加周围炸弹数目")]),t._v("：")]),t._v(" "),s("blockquote",[s("p",[t._v("首先定义一个可以获取某个button的邻居button数组的方法")]),t._v(" "),s("p",[t._v("而后遍历邻居button组成的数组，可以计算该格子周围炸弹数量")]),t._v(" "),s("p",[t._v("最后利用该方法，遍历buttonArr按钮数组，对于周围有炸弹的格子，赋予特殊属性【button.dataset.z=1】表示他们是应该提示数字的格子，数字的表示为给button appendChild一个span，它的innerText即为bombNum周围炸弹数目，默认看不见display为none，排查后显示【display为block】")])]),t._v(" "),s("p",[t._v("基于此可以分出三种格子："),s("strong",[t._v("地雷格子、空白格子和数字格子")]),t._v("【周围有地雷的安全格子】")]),t._v(" "),s("h3",{attrs:{id:"游戏逻辑处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#游戏逻辑处理"}},[t._v("#")]),t._v(" 游戏逻辑处理：")]),t._v(" "),s("p",[t._v("给每一个button addEventListener添加事件监听click，使得用户点击后实现四种情况反馈：")]),t._v(" "),s("blockquote",[s("p",[t._v('一、左键点击：首先无区别添加已点击的类名，表示该格子已被点【this.classList.add("clicked")】')]),t._v(" "),s("p",[t._v("三种格子由button.dataset.z区分【空白没有该属性，地雷为9，数字为1】")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("所点击格子为数字格子，将button的child的span设置display为block显示数字")])]),t._v(" "),s("li",[s("p",[t._v("所点击格子为地雷格子，button的classList.add('bomb')显示地雷，后弹出游戏失败重新开始【location.reload()】【添加setTimeout给用户反应时间】")])]),t._v(" "),s("li",[s("p",[t._v("所点击格子为空白格子【难点！要点！】：")]),t._v(" "),s("p",[t._v("​\t首先获取点击的坐标xy以获取其邻居button组成的数组；而后遍历该邻居数组，对于不是地雷的格子都添加已点击类名，数字格子的span也进行显示，而如果又有空白格子则加入一个空白格数组blankArr，对该数组里的button再次调用点击事件，循环往复直到所有"),s("strong",[t._v("目前可以知晓的安全格子已被排查")])])])]),t._v(" "),s("p",[t._v("二、 右键点击【addEventListener('"),s("strong",[t._v("contextmenu")]),t._v("',f(){})】【用户辅助标记，也就是插旗子】：")]),t._v(" "),s("p",[t._v("​\t如果该格子没有插旗子&&未点击，则添加flag类名，若已有flag则remove该类名")]),t._v(" "),s("p",[t._v("​\t屏蔽浏览器默认右键弹出菜单：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("oncontextmenu")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" one "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("srcElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"INPUT"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"text"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v("\n        one"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"TEXTAREA"')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("p",[t._v("判断用户胜利：所有已点击的空白格子和数字格子都会被push进一个数组totalArr，而在每次点击事件触发后都会进行判定，检查该数组长度是否为安全格子数目【如256-40=216个】，若是则游戏胜利")])])}),[],!1,null,null,null);s.default=e.exports}}]);